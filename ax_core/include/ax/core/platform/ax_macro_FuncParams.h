#ifndef __ax_core_macro_FuncParams_h__
#define __ax_core_macro_FuncParams_h__


/* !!!! 

This file generated by tools/ax_FuncParams_generator.html ( java script ) 

*/


//! ==== For 0 fixed parameter ===
#define ax_Func_Params0_Decalre( ReturnType, FuncName, Arg ) \
  ReturnType FuncName (  );\
  ReturnType FuncName ( const Arg & a0 );\
  ReturnType FuncName ( const Arg & a0, const Arg & a1 );\
  ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2 );\
  ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 );\
  ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 );\
  ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 );\
  ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 );\
  ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 );\
  ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 );\
  ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 );\
  ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 );\
  ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 );\
  ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 );\
  ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 );\
  ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 );\
  ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 );\
//---- End Macro ---

#define ax_Func_Params0( ReturnType, FuncName, Arg ) \
  inline   ReturnType FuncName (  ) { \
    ax_Ptr< const Arg > args[] = {};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 0 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 1 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 2 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 3 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 4 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 5 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 6 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 7 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 8 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 9 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 10 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 11 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 12 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 13 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 14 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 15 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14),  ax_const_cast(&a15)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 16 ) ); \
  };\
//---- End Macro ---

//! ==== For 0 fixed parameter ===
#define ax_ConstFunc_Params0_Decalre( ReturnType, FuncName, Arg ) \
  ReturnType FuncName (  ) const;\
  ReturnType FuncName ( const Arg & a0 ) const;\
  ReturnType FuncName ( const Arg & a0, const Arg & a1 ) const;\
  ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2 ) const;\
  ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 ) const;\
  ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 ) const;\
  ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 ) const;\
  ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 ) const;\
  ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 ) const;\
  ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 ) const;\
  ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 ) const;\
  ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 ) const;\
  ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 ) const;\
  ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 ) const;\
  ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 ) const;\
  ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 ) const;\
  ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 ) const;\
//---- End Macro ---

#define ax_ConstFunc_Params0( ReturnType, FuncName, Arg ) \
  inline   ReturnType FuncName (  ) const { \
    ax_Ptr< const Arg > args[] = {};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 0 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 1 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 2 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 3 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 4 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 5 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 6 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 7 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 8 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 9 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 10 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 11 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 12 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 13 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 14 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 15 ) ); \
  };\
  inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14),  ax_const_cast(&a15)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 16 ) ); \
  };\
//---- End Macro ---

//! ==== For 0 fixed parameter ===
#define ax_TemplateFunc_Params0_Decalre( TemplateDefine, ReturnType, FuncName, Arg ) \
  TemplateDefine   ReturnType FuncName (  );\
  TemplateDefine   ReturnType FuncName ( const Arg & a0 );\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1 );\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2 );\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 );\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 );\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 );\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 );\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 );\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 );\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 );\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 );\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 );\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 );\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 );\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 );\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 );\
//---- End Macro ---

#define ax_TemplateFunc_Params0( TemplateDefine, ReturnType, FuncName, Arg ) \
  TemplateDefine   inline   ReturnType FuncName (  ) { \
    ax_Ptr< const Arg > args[] = {};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 0 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 1 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 2 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 3 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 4 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 5 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 6 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 7 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 8 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 9 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 10 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 11 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 12 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 13 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 14 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 15 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14),  ax_const_cast(&a15)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 16 ) ); \
  };\
//---- End Macro ---

//! ==== For 0 fixed parameter ===
#define ax_TemplateConstFunc_Params0_Decalre( TemplateDefine, ReturnType, FuncName, Arg ) \
  TemplateDefine   ReturnType FuncName (  ) const;\
  TemplateDefine   ReturnType FuncName ( const Arg & a0 ) const;\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1 ) const;\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2 ) const;\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 ) const;\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 ) const;\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 ) const;\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 ) const;\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 ) const;\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 ) const;\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 ) const;\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 ) const;\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 ) const;\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 ) const;\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 ) const;\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 ) const;\
  TemplateDefine   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 ) const;\
//---- End Macro ---

#define ax_TemplateConstFunc_Params0( TemplateDefine, ReturnType, FuncName, Arg ) \
  TemplateDefine   inline   ReturnType FuncName (  ) const { \
    ax_Ptr< const Arg > args[] = {};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 0 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 1 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 2 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 3 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 4 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 5 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 6 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 7 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 8 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 9 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 10 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 11 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 12 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 13 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 14 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 15 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14),  ax_const_cast(&a15)};\
    return ax_JOIN_WORD(FuncName,_Params)(  ax_params< Arg >( args, 16 ) ); \
  };\
//---- End Macro ---

//! ==== For 1 fixed parameter ===
#define ax_Func_Params1_Decalre( ReturnType, FuncName, Fixed0, Arg ) \
  ReturnType FuncName ( Fixed0 f0 );\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0 );\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1 );\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2 );\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 );\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 );\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 );\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 );\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 );\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 );\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 );\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 );\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 );\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 );\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 );\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 );\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 );\
//---- End Macro ---

#define ax_Func_Params1( ReturnType, FuncName, Fixed0, Arg ) \
  inline   ReturnType FuncName ( Fixed0 f0 ) { \
    ax_Ptr< const Arg > args[] = {};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 0 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 1 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 2 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 3 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 4 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 5 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 6 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 7 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 8 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 9 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 10 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 11 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 12 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 13 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 14 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 15 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14),  ax_const_cast(&a15)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 16 ) ); \
  };\
//---- End Macro ---

//! ==== For 1 fixed parameter ===
#define ax_ConstFunc_Params1_Decalre( ReturnType, FuncName, Fixed0, Arg ) \
  ReturnType FuncName ( Fixed0 f0 ) const;\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0 ) const;\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1 ) const;\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2 ) const;\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 ) const;\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 ) const;\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 ) const;\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 ) const;\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 ) const;\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 ) const;\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 ) const;\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 ) const;\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 ) const;\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 ) const;\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 ) const;\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 ) const;\
  ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 ) const;\
//---- End Macro ---

#define ax_ConstFunc_Params1( ReturnType, FuncName, Fixed0, Arg ) \
  inline   ReturnType FuncName ( Fixed0 f0 ) const { \
    ax_Ptr< const Arg > args[] = {};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 0 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 1 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 2 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 3 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 4 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 5 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 6 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 7 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 8 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 9 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 10 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 11 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 12 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 13 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 14 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 15 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14),  ax_const_cast(&a15)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 16 ) ); \
  };\
//---- End Macro ---

//! ==== For 1 fixed parameter ===
#define ax_TemplateFunc_Params1_Decalre( TemplateDefine, ReturnType, FuncName, Fixed0, Arg ) \
  TemplateDefine   ReturnType FuncName ( Fixed0 f0 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 );\
//---- End Macro ---

#define ax_TemplateFunc_Params1( TemplateDefine, ReturnType, FuncName, Fixed0, Arg ) \
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0 ) { \
    ax_Ptr< const Arg > args[] = {};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 0 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 1 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 2 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 3 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 4 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 5 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 6 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 7 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 8 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 9 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 10 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 11 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 12 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 13 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 14 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 15 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14),  ax_const_cast(&a15)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 16 ) ); \
  };\
//---- End Macro ---

//! ==== For 1 fixed parameter ===
#define ax_TemplateConstFunc_Params1_Decalre( TemplateDefine, ReturnType, FuncName, Fixed0, Arg ) \
  TemplateDefine   ReturnType FuncName ( Fixed0 f0 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 ) const;\
//---- End Macro ---

#define ax_TemplateConstFunc_Params1( TemplateDefine, ReturnType, FuncName, Fixed0, Arg ) \
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0 ) const { \
    ax_Ptr< const Arg > args[] = {};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 0 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 1 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 2 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 3 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 4 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 5 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 6 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 7 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 8 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 9 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 10 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 11 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 12 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 13 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 14 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 15 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14),  ax_const_cast(&a15)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, ax_params< Arg >( args, 16 ) ); \
  };\
//---- End Macro ---

//! ==== For 2 fixed parameter ===
#define ax_Func_Params2_Decalre( ReturnType, FuncName, Fixed0, Fixed1, Arg ) \
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 );\
//---- End Macro ---

#define ax_Func_Params2( ReturnType, FuncName, Fixed0, Fixed1, Arg ) \
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1 ) { \
    ax_Ptr< const Arg > args[] = {};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 0 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 1 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 2 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 3 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 4 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 5 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 6 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 7 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 8 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 9 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 10 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 11 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 12 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 13 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 14 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 15 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14),  ax_const_cast(&a15)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 16 ) ); \
  };\
//---- End Macro ---

//! ==== For 2 fixed parameter ===
#define ax_ConstFunc_Params2_Decalre( ReturnType, FuncName, Fixed0, Fixed1, Arg ) \
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 ) const;\
//---- End Macro ---

#define ax_ConstFunc_Params2( ReturnType, FuncName, Fixed0, Fixed1, Arg ) \
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1 ) const { \
    ax_Ptr< const Arg > args[] = {};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 0 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 1 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 2 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 3 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 4 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 5 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 6 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 7 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 8 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 9 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 10 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 11 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 12 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 13 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 14 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 15 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14),  ax_const_cast(&a15)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 16 ) ); \
  };\
//---- End Macro ---

//! ==== For 2 fixed parameter ===
#define ax_TemplateFunc_Params2_Decalre( TemplateDefine, ReturnType, FuncName, Fixed0, Fixed1, Arg ) \
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 );\
//---- End Macro ---

#define ax_TemplateFunc_Params2( TemplateDefine, ReturnType, FuncName, Fixed0, Fixed1, Arg ) \
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1 ) { \
    ax_Ptr< const Arg > args[] = {};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 0 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 1 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 2 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 3 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 4 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 5 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 6 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 7 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 8 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 9 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 10 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 11 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 12 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 13 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 14 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 15 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14),  ax_const_cast(&a15)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 16 ) ); \
  };\
//---- End Macro ---

//! ==== For 2 fixed parameter ===
#define ax_TemplateConstFunc_Params2_Decalre( TemplateDefine, ReturnType, FuncName, Fixed0, Fixed1, Arg ) \
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 ) const;\
//---- End Macro ---

#define ax_TemplateConstFunc_Params2( TemplateDefine, ReturnType, FuncName, Fixed0, Fixed1, Arg ) \
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1 ) const { \
    ax_Ptr< const Arg > args[] = {};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 0 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 1 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 2 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 3 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 4 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 5 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 6 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 7 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 8 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 9 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 10 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 11 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 12 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 13 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 14 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 15 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14),  ax_const_cast(&a15)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, ax_params< Arg >( args, 16 ) ); \
  };\
//---- End Macro ---

//! ==== For 3 fixed parameter ===
#define ax_Func_Params3_Decalre( ReturnType, FuncName, Fixed0, Fixed1, Fixed2, Arg ) \
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 );\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 );\
//---- End Macro ---

#define ax_Func_Params3( ReturnType, FuncName, Fixed0, Fixed1, Fixed2, Arg ) \
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2 ) { \
    ax_Ptr< const Arg > args[] = {};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 0 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 1 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 2 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 3 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 4 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 5 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 6 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 7 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 8 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 9 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 10 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 11 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 12 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 13 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 14 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 15 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14),  ax_const_cast(&a15)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 16 ) ); \
  };\
//---- End Macro ---

//! ==== For 3 fixed parameter ===
#define ax_ConstFunc_Params3_Decalre( ReturnType, FuncName, Fixed0, Fixed1, Fixed2, Arg ) \
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 ) const;\
  ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 ) const;\
//---- End Macro ---

#define ax_ConstFunc_Params3( ReturnType, FuncName, Fixed0, Fixed1, Fixed2, Arg ) \
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2 ) const { \
    ax_Ptr< const Arg > args[] = {};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 0 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 1 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 2 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 3 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 4 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 5 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 6 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 7 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 8 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 9 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 10 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 11 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 12 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 13 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 14 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 15 ) ); \
  };\
  inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14),  ax_const_cast(&a15)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 16 ) ); \
  };\
//---- End Macro ---

//! ==== For 3 fixed parameter ===
#define ax_TemplateFunc_Params3_Decalre( TemplateDefine, ReturnType, FuncName, Fixed0, Fixed1, Fixed2, Arg ) \
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 );\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 );\
//---- End Macro ---

#define ax_TemplateFunc_Params3( TemplateDefine, ReturnType, FuncName, Fixed0, Fixed1, Fixed2, Arg ) \
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2 ) { \
    ax_Ptr< const Arg > args[] = {};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 0 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 1 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 2 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 3 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 4 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 5 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 6 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 7 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 8 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 9 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 10 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 11 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 12 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 13 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 14 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 15 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 ) { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14),  ax_const_cast(&a15)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 16 ) ); \
  };\
//---- End Macro ---

//! ==== For 3 fixed parameter ===
#define ax_TemplateConstFunc_Params3_Decalre( TemplateDefine, ReturnType, FuncName, Fixed0, Fixed1, Fixed2, Arg ) \
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 ) const;\
  TemplateDefine   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 ) const;\
//---- End Macro ---

#define ax_TemplateConstFunc_Params3( TemplateDefine, ReturnType, FuncName, Fixed0, Fixed1, Fixed2, Arg ) \
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2 ) const { \
    ax_Ptr< const Arg > args[] = {};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 0 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 1 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 2 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 3 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 4 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 5 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 6 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 7 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 8 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 9 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 10 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 11 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 12 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 13 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 14 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 15 ) ); \
  };\
  TemplateDefine   inline   ReturnType FuncName ( Fixed0 f0, Fixed1 f1, Fixed2 f2, const Arg & a0, const Arg & a1, const Arg & a2, const Arg & a3, const Arg & a4, const Arg & a5, const Arg & a6, const Arg & a7, const Arg & a8, const Arg & a9, const Arg & a10, const Arg & a11, const Arg & a12, const Arg & a13, const Arg & a14, const Arg & a15 ) const { \
    ax_Ptr< const Arg > args[] = { ax_const_cast(&a0),  ax_const_cast(&a1),  ax_const_cast(&a2),  ax_const_cast(&a3),  ax_const_cast(&a4),  ax_const_cast(&a5),  ax_const_cast(&a6),  ax_const_cast(&a7),  ax_const_cast(&a8),  ax_const_cast(&a9),  ax_const_cast(&a10),  ax_const_cast(&a11),  ax_const_cast(&a12),  ax_const_cast(&a13),  ax_const_cast(&a14),  ax_const_cast(&a15)};\
    return ax_JOIN_WORD(FuncName,_Params)(  f0, f1, f2, ax_params< Arg >( args, 16 ) ); \
  };\
//---- End Macro ---



#endif //__ax_core_macro_FuncParams_h__
